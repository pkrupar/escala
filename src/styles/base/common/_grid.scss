.grid {
	@extend .grid--gutters;

	display: flex;
	flex-wrap: wrap;
	list-style: none;
	padding: 0;
	min-height: 1px; // Prevent collapsing
}

.grid-cell {
	flex: 1;
	min-width: 0; // https://css-tricks.com/flexbox-truncated-text/
}

// TODO: Bonobo specific modifier
// now is renamed from "alignItemsCenter" to "alignCenter"
// deal with compability issue
.grid.grid--alignItemsCenter { align-items: center; }

/**
 * Sass loops and stuff
 */

@mixin makeGridGutters($gutter, $index) {
	@if ($index == 3) {
		@include makeGridGutters($gutter, "");
	}

	.grid.grid--gutters#{$index} { margin: 0 (-$gutter); }
	.grid.grid--gutters#{$index} > .grid-cell { padding: 0 $gutter; }
}

@each $index, $grid-cell-gutter in $grid-cell-gutters {
	@include makeGridGutters($grid-cell-gutter, $index);
}

@mixin makeGridCell($width: 100%) {
	flex: 0 0 $width;
	max-width: $width;

	// wkhtmltopdf 0.12.3.2 seems NOT to support "flexbox-basis"
	// As as result grid width is same as its children.
	// Explicitly setting "width" fixes it.  
	@if ($esc-wkhtmltopdfGridFix) {
		@media print { width: $width; }
	}
}

@mixin makeGridCells($sreenSize: null) {
	$screenSizeName: if($sreenSize, "#{$sreenSize}-", "");

	// Flexbox wrap
	.grid.grid--#{$screenSizeName}wrapDefault { flex-wrap: wrap; }
	.grid.grid--#{$screenSizeName}wrapReverse { flex-wrap: wrap-reverse; }
	.grid.grid--#{$screenSizeName}noWrap { flex-wrap: nowrap; }

	// Flexbox align
	.grid.grid--#{$screenSizeName}alignCenter { align-items: center; }
	.grid.grid--#{$screenSizeName}alignStart { align-items: flex-start; }
	.grid.grid--#{$screenSizeName}alignEnd { align-items: flex-start; }
	.grid.grid--#{$screenSizeName}alignBaseline { align-items: baseline; }
	.grid.grid--#{$screenSizeName}alignStretch { align-items: stretch; }

	.grid-cell--#{$screenSizeName}fluid {
		flex: 1;
		max-width: inherit;
	}

	.grid-cell--#{$screenSizeName}notFluid {
		flex: 0 0 auto;
		max-width: inherit;
	}

	// Make columns (pray for better css grid support)
	@for ($i from 1 through $grid-columns-count) {
		$gridCellClassName: ".grid-cell--#{$screenSizeName}#{$i}";
		$gridCellWidth: 100% / $grid-columns-count * $i;
		$gridCellOffsetClassName: ".grid-cell--#{$screenSizeName}offsetBy#{$i}";

		// Cell
		#{$gridCellClassName} {
			@include makeGridCell($gridCellWidth);
		}

		// Offset
		#{$gridCellOffsetClassName} {
			margin-left: $gridCellWidth;
		}
	}
}

@include makeGridCells();

@if ($esc-renderResponsiveGrid) {
	@each ($screenSize, $breakpoint in $screen-breakpoints) {
		@if ($breakpoint == 0) {
			@include makeGridCells($screenSize);
		}

		@else {
			@media (min-width: $breakpoint) {
				@include makeGridCells($screenSize);
			}
		}
	}
}
