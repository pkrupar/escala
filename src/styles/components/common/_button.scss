.button {
	display: inline-block;
	font-size: $button-global-font-size;
	height: $button-global-height;
	line-height: $button-global-height;
	padding: $button-global-padding;
	border: 0;
	border-radius: $button-global-border-radius;
	cursor: pointer;
	box-shadow: none;
	outline: 0;
	vertical-align: middle;
	transition: $button-global-transition;
	text-align: center;
	text-decoration: none;
}

a.button:not(.button--asLink):hover {
	text-decoration: none;
}

%button--unstyled {
	height: auto;
	border: 0;
	padding: 0;
	background: transparent;
	line-height: inherit;
	color: $color-text;
	font-size: $fontSize-default;
}

@mixin createBasicButtonMofidier($name, $config) {
	$nameWithModifierName: ".button.button--#{$name}";

	#{$nameWithModifierName} {
		background: map-get($config, "bg");
		color: map-get($config, "color");
	}

	#{$nameWithModifierName}:disabled {
		opacity: 0.4;
		cursor: not-allowed;
	}

	#{$nameWithModifierName}:not(:disabled):not(.button--outlined):not(.button--borderLess):hover {
		background: map-get($config, "hover-bg");
	}

	#{$nameWithModifierName}.button--outlined {
		background: transparent;
		border: 1px solid map-get($config, "outlined-border-color");
		color: map-get($config, "outlined-color");
	}

	#{$nameWithModifierName}.button--outlined:not(:disabled):hover {
		border-color: map-get($config, "outlined-hover-border-color");
		color: map-get($config, "outlined-hover-color");
	}

	#{$nameWithModifierName}.button--borderLess {
		color: map-get($config, "borderLess-color");
	}

	#{$nameWithModifierName}.button--borderLess:not(:disabled):hover {
		color: map-get($config, "borderLess-hover-color");
	}
}

@include createBasicButtonMofidier("primary", (
	bg: $button-primary-bg,
	color: $button-primary-color,
	hover-bg: $button-primary-hover-bg,
	outlined-color: $button-primary-outlined-color,
	outlined-border-color: $button-primary-outlined-border-color,
	outlined-hover-color: $button-primary-outlined-hover-color,
	outlined-hover-border-color: $button-primary-outlined-hover-border-color,
	borderLess-color: $button-primary-outlined-color,
	borderLess-hover-color: $button-primary-outlined-hover-color,
));

@include createBasicButtonMofidier("secondary", (
	bg: $button-secondary-bg,
	color: $button-secondary-color,
	hover-bg: $button-secondary-hover-bg,
	outlined-color: $button-secondary-outlined-color,
	outlined-border-color: $button-secondary-outlined-border-color,
	outlined-hover-color: $button-secondary-outlined-hover-color,
	outlined-hover-border-color: $button-secondary-outlined-hover-border-color,
	borderLess-color: lighten($color-text, 25%),
	borderLess-hover-color: lighten($color-text, 15%),
));

/**
 * Button modifier: danger
 */

.button.button--danger {
	background: $button-danger-background;
	color: $white;
}

.button.button--danger.button--outlined {
	background: transparent;
	color: $button-danger-background;
	border: 1px solid $button-danger-background;
}

.button.button--danger.button--outlined:hover {
	color: darken($button-danger-background, 5%);
	border-color: darken($button-danger-background, 5%);
}

.button.button--danger.button--borderLess {
	color: $button-danger-background;
}

/**
 * Button modifier: success
 */

.button.button--success {
	background: $button-success-background;
	color: $white;
}

.button.button--success.button--outlined {
	background: transparent;
	color: $button-success-background;
	border: 1px solid $button-success-background;
}

.button.button--success.button--outlined:hover {
	color: darken($button-success-background, 5%);
	border-color: darken($button-success-background, 5%);
}

.button.button--success.button--borderLess {
	color: $button-success-background;
}

/**
 * Button modifier: warning
 */

.button.button--warning {
	background: $button-warning-background;
	color: $white;
}

.button.button--warning.button--outlined {
	background: transparent;
	color: $button-warning-background;
	border: 1px solid $button-warning-background;
}

.button.button--warning.button--outlined:hover {
	color: darken($button-warning-background, 5%);
	border-color: darken($button-warning-background, 5%);
}

.button.button--warning.button--borderLess {
	color: $button-warning-background;
}

/**
 * Button modifier: info
 */

.button.button--info {
	background: $button-info-background;
	color: $white;
}

.button.button--info.button--outlined {
	background: transparent;
	color: $button-info-background;
	border: 1px solid $button-info-background;
}

.button.button--info.button--outlined:hover {
	color: darken($button-info-background, 5%);
	border-color: darken($button-info-background, 5%);
}

.button.button--info.button--borderLess {
	color: $button-info-background;
}


/**
 * Button modifier: borderLess
 */

.button.button--borderLess {
	background: transparent;
	border: 0;
	padding: 0;
}

.button.button--borderLess:hover {
	background: transparent;
}

/**
 * Misc button modifiers
 */

.button--lightIcon {
	@extend %button--unstyled;

	color: $color-lightIcon;
	font-size: rem(17px);
}

.button--lightIcon:hover {
	color: darken($color-lightIcon, 10%);
}

.button.button--circular {
	width: rem(40px);
	height: rem(40px);
	padding: 0;
}

.button.button--symmetricalIcon {
	width: rem(40px);
	height: rem(40px);
	padding: 0;
}

.button.button--bigger {
	font-size: rem(15px);
}

.button.button--fullWidth {
	display: block;
	width: 100%;
}

.button.button--asLink {
	height: auto;
	line-height: inherit;
	background: transparent;
	padding: 0;
}

.button.button--asLink.button--smaller {
	font-size: rem(11px);
}

.button.button--unstyled {
	@extend %button--unstyled;
}

/**
 * TODO: deprecate
 *  - figure out how to use something more general
 */
.buttonGroup > .button:not(:last-of-type) {
	margin-right: $gutter/2;
}
